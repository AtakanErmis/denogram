// Copyright 2020 the denogram authors. All rights reserved. MIT license.
import { User } from "./user.ts";
import { Chat } from "./chat.ts";
import { MessageEntity } from "./message_entity.ts";
import { Animation } from "./animation.ts";
import { Audio } from "./audio.ts";
import { Document } from "./document.ts";
import { PhotoSize } from "./photo_size.ts";
import { Sticker } from "./sticker.ts";
import { Video } from "./video.ts";
import { VideoNote } from "./video_note.ts";
import { Voice } from "./voice.ts";
import { Contact } from "./contact.ts";
import { Dice } from "./dice.ts";
import { Game } from "./game.ts";
import { Poll } from "./poll.ts";
import { Venue } from "./venue.ts";
import { Location } from "./location.ts";
import { Invoice } from "./invoice.ts";
import { PassportData } from "./passport_data.ts";
import { InlineKeyboardMarkup } from "./inline_keyboard_markup.ts";

/** Message */
export interface Message {
  message_id: number;
  from?: User;
  date: number;
  chat: Chat;
  forward_from?: User;
  forward_from_chat?: Chat;
  forward_from_message_id?: number;
  forward_signature?: string;
  forward_sender_name?: string;
  forward_date?: number;
  reply_to_message?: Message;
  via_bot?: User;
  edit_date?: number;
  media_group_id?: number;
  author_signature?: string;
  text?: string;
  entities?: MessageEntity[];
  animation?: Animation;
  audio?: Audio;
  document?: Document;
  photo?: PhotoSize[];
  sticker?: Sticker;
  video?: Video;
  video_note?: VideoNote;
  voice?: Voice;
  caption?: String;
  caption_entities?: MessageEntity[];
  contact?: Contact;
  dice?: Dice;
  game?: Game;
  poll?: Poll;
  venue?: Venue;
  location?: Location;
  new_chat_members?: User[];
  left_chat_member?: User;
  new_chat_title?: String;
  new_chat_photo?: PhotoSize[];
  delete_chat_photo?: true;
  group_chat_created?: true;
  supergroup_chat_created?: true;
  channel_chat_created?: true;
  migrate_to_chat_id?: number;
  migrate_from_chat_id?: number;
  pinned_message?: Message;
  invoice?: Invoice;
  passport_data?: PassportData;
  reply_markup?: InlineKeyboardMarkup;
}
